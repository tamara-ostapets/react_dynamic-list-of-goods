{"version":3,"sources":["helpers.js","goods.js","components/Good/Good.js","types.js","components/GoodsList/GoodsList.js","App.js","index.js"],"names":["request","url","fetch","then","response","json","getAll","get5First","result","sort","a","b","name","localeCompare","slice","getRed","filter","good","color","Good","PropTypes","shape","id","number","isRequired","string","className","key","style","GoodsList","goods","map","App","state","loadGoods","e","target","setState","prevProps","this","props","type","onClick","React","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"wSAEaA,G,MAAU,SAAAC,GAAG,OAAIC,MAAM,GAAD,OAFtB,8DAEsB,OAAcD,IAC9CE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YCChBC,EAAS,kBAAMN,EAFX,gBAIJO,EAAY,kBAAMP,EAJd,eAKdG,MAAK,SAAAK,GAAM,OAAIA,EACbC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SAAOE,MAAM,EAAG,OAE9CC,EAAS,kBAAMf,EARX,eASdG,MAAK,SAAAK,GAAM,OAAIA,EAAOQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,a,gBCRhCC,GCDWC,IAAUC,MAAM,CACtCC,GAAIF,IAAUG,OAAOC,WACrBZ,KAAMQ,IAAUK,OAAOD,WACvBN,MAAOE,IAAUK,OAAOD,aDFN,SAAC,GAAD,QAAGP,KAAQK,EAAX,EAAWA,GAAIV,EAAf,EAAeA,KAAMM,EAArB,EAAqBA,MAArB,OAClB,wBACEQ,UAAU,OACVC,IAAKL,EACLM,MAAO,CAAEV,MAAM,GAAD,OAAKA,KAElBN,KEJQiB,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,wBAAIJ,UAAU,aACXI,EAAMC,KAAI,SAAAd,GAAI,OAAI,kBAAC,EAAD,CAAMU,IAAKV,EAAKK,GAAIL,KAAMA,SCApCe,EAAb,4MACEC,MAAQ,CACNH,MAAO,IAFX,EAWEI,UAXF,uCAWc,WAAMC,GAAN,iBAAAzB,EAAA,sDACFY,EAAOa,EAAEC,OAATd,GACJQ,EAAQ,GAFF,KAIFR,EAJE,OAKF,cALE,OAQF,eARE,OAWF,cAXE,wCAMQhB,IANR,cAMNwB,EANM,oDASQvB,IATR,eASNuB,EATM,qDAYQf,IAZR,eAYNe,EAZM,sEAkBV,EAAKO,SAAS,CAAEP,UAlBN,4CAXd,uHAKqBQ,GACbA,EAAUR,QAAUS,KAAKC,MAAMV,OACjCS,KAAKL,cAPX,+BAgCY,IACAJ,EAAUS,KAAKN,MAAfH,MAER,OACE,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,eACb,4BACEe,KAAK,SACLnB,GAAG,YACHoB,QAASH,KAAKL,WAHhB,kBAOA,4BACEO,KAAK,SACLnB,GAAG,aACHoB,QAASH,KAAKL,WAHhB,sBAOA,4BACEO,KAAK,SACLnB,GAAG,YACHoB,QAASH,KAAKL,WAHhB,mBASF,qDACA,kBAAC,EAAD,CAAWJ,MAAOA,SA9D1B,GAAyBa,IAAMC,WAyE/BZ,EAAIa,aAAe,CACjBf,MAAO,IC5ETgB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.164130e5.chunk.js","sourcesContent":["const API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods`;\n\nexport const request = url => fetch(`${API_URL}${url}`)\n  .then(response => response.json());\n","import { request } from './helpers';\n\nconst endPoint = '/goods.json';\n\nexport const getAll = () => request(endPoint);\n\nexport const get5First = () => request(endPoint)\n  .then(result => result\n    .sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5));\n\nexport const getRed = () => request(endPoint)\n  .then(result => result.filter(good => good.color === 'red'));\n","import React from 'react';\nimport { TypeGood } from '../../types';\n\nexport const Good = ({ good: { id, name, color } }) => (\n  <li\n    className=\"Good\"\n    key={id}\n    style={{ color: `${color}` }}\n  >\n    {name}\n  </li>\n);\n\nGood.propTypes = {\n  good: TypeGood.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TypeGood = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Good } from '../Good/Good';\nimport { TypeGood } from '../../types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul className=\"GoodsList\">\n    {goods.map(good => <Good key={good.id} good={good} />)}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(TypeGood).isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { PropTypes } from 'prop-types';\nimport { getAll, get5First, getRed } from './goods';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { TypeGood } from './types';\n\nexport class App extends React.Component {\n  state = {\n    goods: [],\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.goods !== this.props.goods) {\n      this.loadGoods();\n    }\n  }\n\n  loadGoods = async(e) => {\n    const { id } = e.target;\n    let goods = [];\n\n    switch (id) {\n      case ('buttonAll'):\n        goods = await getAll();\n        break;\n      case ('buttonFive'):\n        goods = await get5First();\n        break;\n      case ('buttonRed'):\n        goods = await getRed();\n        break;\n      default:\n        return;\n    }\n\n    this.setState({ goods });\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App_buttons\">\n          <button\n            type=\"button\"\n            id=\"buttonAll\"\n            onClick={this.loadGoods}\n          >\n            Load All goods\n          </button>\n          <button\n            type=\"button\"\n            id=\"buttonFive\"\n            onClick={this.loadGoods}\n          >\n            Load 5 first goods\n          </button>\n          <button\n            type=\"button\"\n            id=\"buttonRed\"\n            onClick={this.loadGoods}\n          >\n            Load red goods\n          </button>\n        </div>\n\n        <h1>Dynamic list of Goods</h1>\n        <GoodsList goods={goods} />\n      </div>\n\n    );\n  }\n}\n\nApp.propTypes = {\n  goods: PropTypes.arrayOf(TypeGood),\n};\n\nApp.defaultProps = {\n  goods: [],\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}